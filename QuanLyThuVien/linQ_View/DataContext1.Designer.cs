//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 11/17/2018 7:38:51 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace linQ_View
{

    [DatabaseAttribute(Name = "quanlythuvien")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class QUANLYTHUVIENDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(QUANLYTHUVIENDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertNHANVIEN(NHANVIEN instance);
        partial void UpdateNHANVIEN(NHANVIEN instance);
        partial void DeleteNHANVIEN(NHANVIEN instance);
        partial void InsertSACH(SACH instance);
        partial void UpdateSACH(SACH instance);
        partial void DeleteSACH(SACH instance);
        partial void InsertNHAXB(NHAXB instance);
        partial void UpdateNHAXB(NHAXB instance);
        partial void DeleteNHAXB(NHAXB instance);
        partial void InsertDONDATHANG(DONDATHANG instance);
        partial void UpdateDONDATHANG(DONDATHANG instance);
        partial void DeleteDONDATHANG(DONDATHANG instance);
        partial void InsertCHITIETDONDATHANG(CHITIETDONDATHANG instance);
        partial void UpdateCHITIETDONDATHANG(CHITIETDONDATHANG instance);
        partial void DeleteCHITIETDONDATHANG(CHITIETDONDATHANG instance);

        #endregion

        public QUANLYTHUVIENDataContext() :
        base(GetConnectionString("QUANLYTHUVIENDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public QUANLYTHUVIENDataContext(MappingSource mappingSource) :
        base(GetConnectionString("QUANLYTHUVIENDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public QUANLYTHUVIENDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public QUANLYTHUVIENDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public QUANLYTHUVIENDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public QUANLYTHUVIENDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<VIEWCT> VIEWCTs
        {
            get
            {
                return this.GetTable<VIEWCT>();
            }
        }

        public Devart.Data.Linq.Table<SACHVIEW> SACHVIEWs
        {
            get
            {
                return this.GetTable<SACHVIEW>();
            }
        }

        public Devart.Data.Linq.Table<PMCT> PMCTs
        {
            get
            {
                return this.GetTable<PMCT>();
            }
        }

        public Devart.Data.Linq.Table<VIEWPHAT> VIEWPHATs
        {
            get
            {
                return this.GetTable<VIEWPHAT>();
            }
        }

        public Devart.Data.Linq.Table<NHANVIEN> NHANVIENs
        {
            get
            {
                return this.GetTable<NHANVIEN>();
            }
        }

        public Devart.Data.Linq.Table<SACH> SACHES
        {
            get
            {
                return this.GetTable<SACH>();
            }
        }

        public Devart.Data.Linq.Table<NHAXB> NHAXBs
        {
            get
            {
                return this.GetTable<NHAXB>();
            }
        }

        public Devart.Data.Linq.Table<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this.GetTable<DONDATHANG>();
            }
        }

        public Devart.Data.Linq.Table<CHITIETDONDATHANG> CHITIETDONDATHANGs
        {
            get
            {
                return this.GetTable<CHITIETDONDATHANG>();
            }
        }
    }
}

namespace linQ_View
{

    /// <summary>
    /// VIEW
    /// </summary>
    [Table(Name = @"quanlythuvien.viewct")]
    public partial class VIEWCT
    {
        #pragma warning disable 0649

        private string _MAPHIEUMUON;

        private string _MASACH;

        private string _MANV;

        private string _MADG;

        private System.Nullable<System.DateTime> _NGAYMUON;

        private System.Nullable<System.DateTime> _NGAYDUKIENTRA;

        private System.Nullable<float> _PHICOC;

        private string _TINHTRANG;

        private System.Nullable<float> _Gia;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAPHIEUMUONChanging(string value);
        partial void OnMAPHIEUMUONChanged();
        partial void OnMASACHChanging(string value);
        partial void OnMASACHChanged();
        partial void OnMANVChanging(string value);
        partial void OnMANVChanged();
        partial void OnMADGChanging(string value);
        partial void OnMADGChanged();
        partial void OnNGAYMUONChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYMUONChanged();
        partial void OnNGAYDUKIENTRAChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYDUKIENTRAChanged();
        partial void OnPHICOCChanging(System.Nullable<float> value);
        partial void OnPHICOCChanged();
        partial void OnTINHTRANGChanging(string value);
        partial void OnTINHTRANGChanged();
        partial void OnGiaChanging(System.Nullable<float> value);
        partial void OnGiaChanged();
        #endregion

        public VIEWCT()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAPHIEUMUON in the schema.
        /// </summary>
        [Column(Storage = "_MAPHIEUMUON", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MAPHIEUMUON
        {
            get
            {
                return this._MAPHIEUMUON;
            }
            set
            {
                if (this._MAPHIEUMUON != value)
                {
                    this._MAPHIEUMUON = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MASACH in the schema.
        /// </summary>
        [Column(Storage = "_MASACH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MASACH
        {
            get
            {
                return this._MASACH;
            }
            set
            {
                if (this._MASACH != value)
                {
                    this._MASACH = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANV in the schema.
        /// </summary>
        [Column(Storage = "_MANV", CanBeNull = false, DbType = "CHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANV
        {
            get
            {
                return this._MANV;
            }
            set
            {
                if (this._MANV != value)
                {
                    this._MANV = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADG in the schema.
        /// </summary>
        [Column(Storage = "_MADG", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MADG
        {
            get
            {
                return this._MADG;
            }
            set
            {
                if (this._MADG != value)
                {
                    this._MADG = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYMUON in the schema.
        /// </summary>
        [Column(Storage = "_NGAYMUON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYMUON
        {
            get
            {
                return this._NGAYMUON;
            }
            set
            {
                if (this._NGAYMUON != value)
                {
                    this._NGAYMUON = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYDUKIENTRA in the schema.
        /// </summary>
        [Column(Storage = "_NGAYDUKIENTRA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYDUKIENTRA
        {
            get
            {
                return this._NGAYDUKIENTRA;
            }
            set
            {
                if (this._NGAYDUKIENTRA != value)
                {
                    this._NGAYDUKIENTRA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PHICOC in the schema.
        /// </summary>
        [Column(Storage = "_PHICOC", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> PHICOC
        {
            get
            {
                return this._PHICOC;
            }
            set
            {
                if (this._PHICOC != value)
                {
                    this._PHICOC = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TINHTRANG in the schema.
        /// </summary>
        [Column(Storage = "_TINHTRANG", DbType = "VARCHAR(30) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TINHTRANG
        {
            get
            {
                return this._TINHTRANG;
            }
            set
            {
                if (this._TINHTRANG != value)
                {
                    this._TINHTRANG = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gia in the schema.
        /// </summary>
        [Column(Storage = "_Gia", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> Gia
        {
            get
            {
                return this._Gia;
            }
            set
            {
                if (this._Gia != value)
                {
                    this._Gia = value;
                }
            }
        }
    }

    /// <summary>
    /// VIEW
    /// </summary>
    [Table(Name = @"quanlythuvien.sachview")]
    public partial class SACHVIEW
    {
        #pragma warning disable 0649

        private string _MASACH;

        private string _MATHELOAI;

        private string _MATACGIA;

        private string _MANXB;

        private string _MAVT;

        private string _TENSACH;

        private System.Nullable<int> _NAMXB;

        private string _HINHANHSACH;

        private string _MOTA;

        private string _KHOA;

        private System.Nullable<System.DateTime> _THANGNHAP;

        private System.Nullable<float> _GIA;

        private System.Nullable<int> _SOLUONG;

        private string _TENTACGIA;

        private string _TENNXB;

        private string _TENTHELOAI;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASACHChanging(string value);
        partial void OnMASACHChanged();
        partial void OnMATHELOAIChanging(string value);
        partial void OnMATHELOAIChanged();
        partial void OnMATACGIAChanging(string value);
        partial void OnMATACGIAChanged();
        partial void OnMANXBChanging(string value);
        partial void OnMANXBChanged();
        partial void OnMAVTChanging(string value);
        partial void OnMAVTChanged();
        partial void OnTENSACHChanging(string value);
        partial void OnTENSACHChanged();
        partial void OnNAMXBChanging(System.Nullable<int> value);
        partial void OnNAMXBChanged();
        partial void OnHINHANHSACHChanging(string value);
        partial void OnHINHANHSACHChanged();
        partial void OnMOTAChanging(string value);
        partial void OnMOTAChanged();
        partial void OnKHOAChanging(string value);
        partial void OnKHOAChanged();
        partial void OnTHANGNHAPChanging(System.Nullable<System.DateTime> value);
        partial void OnTHANGNHAPChanged();
        partial void OnGIAChanging(System.Nullable<float> value);
        partial void OnGIAChanged();
        partial void OnSOLUONGChanging(System.Nullable<int> value);
        partial void OnSOLUONGChanged();
        partial void OnTENTACGIAChanging(string value);
        partial void OnTENTACGIAChanged();
        partial void OnTENNXBChanging(string value);
        partial void OnTENNXBChanged();
        partial void OnTENTHELOAIChanging(string value);
        partial void OnTENTHELOAIChanged();
        #endregion

        public SACHVIEW()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASACH in the schema.
        /// </summary>
        [Column(Storage = "_MASACH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MASACH
        {
            get
            {
                return this._MASACH;
            }
            set
            {
                if (this._MASACH != value)
                {
                    this._MASACH = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATHELOAI in the schema.
        /// </summary>
        [Column(Storage = "_MATHELOAI", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATHELOAI
        {
            get
            {
                return this._MATHELOAI;
            }
            set
            {
                if (this._MATHELOAI != value)
                {
                    this._MATHELOAI = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATACGIA in the schema.
        /// </summary>
        [Column(Storage = "_MATACGIA", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATACGIA
        {
            get
            {
                return this._MATACGIA;
            }
            set
            {
                if (this._MATACGIA != value)
                {
                    this._MATACGIA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANXB in the schema.
        /// </summary>
        [Column(Storage = "_MANXB", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANXB
        {
            get
            {
                return this._MANXB;
            }
            set
            {
                if (this._MANXB != value)
                {
                    this._MANXB = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MAVT in the schema.
        /// </summary>
        [Column(Storage = "_MAVT", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MAVT
        {
            get
            {
                return this._MAVT;
            }
            set
            {
                if (this._MAVT != value)
                {
                    this._MAVT = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSACH in the schema.
        /// </summary>
        [Column(Storage = "_TENSACH", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSACH
        {
            get
            {
                return this._TENSACH;
            }
            set
            {
                if (this._TENSACH != value)
                {
                    this._TENSACH = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAMXB in the schema.
        /// </summary>
        [Column(Storage = "_NAMXB", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NAMXB
        {
            get
            {
                return this._NAMXB;
            }
            set
            {
                if (this._NAMXB != value)
                {
                    this._NAMXB = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HINHANHSACH in the schema.
        /// </summary>
        [Column(Storage = "_HINHANHSACH", DbType = "VARCHAR(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string HINHANHSACH
        {
            get
            {
                return this._HINHANHSACH;
            }
            set
            {
                if (this._HINHANHSACH != value)
                {
                    this._HINHANHSACH = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTA in the schema.
        /// </summary>
        [Column(Storage = "_MOTA", DbType = "VARCHAR(1500) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTA
        {
            get
            {
                return this._MOTA;
            }
            set
            {
                if (this._MOTA != value)
                {
                    this._MOTA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KHOA in the schema.
        /// </summary>
        [Column(Storage = "_KHOA", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string KHOA
        {
            get
            {
                return this._KHOA;
            }
            set
            {
                if (this._KHOA != value)
                {
                    this._KHOA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for THANGNHAP in the schema.
        /// </summary>
        [Column(Storage = "_THANGNHAP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> THANGNHAP
        {
            get
            {
                return this._THANGNHAP;
            }
            set
            {
                if (this._THANGNHAP != value)
                {
                    this._THANGNHAP = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIA in the schema.
        /// </summary>
        [Column(Storage = "_GIA", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> GIA
        {
            get
            {
                return this._GIA;
            }
            set
            {
                if (this._GIA != value)
                {
                    this._GIA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOLUONG in the schema.
        /// </summary>
        [Column(Storage = "_SOLUONG", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SOLUONG
        {
            get
            {
                return this._SOLUONG;
            }
            set
            {
                if (this._SOLUONG != value)
                {
                    this._SOLUONG = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTACGIA in the schema.
        /// </summary>
        [Column(Storage = "_TENTACGIA", DbType = "VARCHAR(30) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENTACGIA
        {
            get
            {
                return this._TENTACGIA;
            }
            set
            {
                if (this._TENTACGIA != value)
                {
                    this._TENTACGIA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNXB in the schema.
        /// </summary>
        [Column(Storage = "_TENNXB", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNXB
        {
            get
            {
                return this._TENNXB;
            }
            set
            {
                if (this._TENNXB != value)
                {
                    this._TENNXB = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTHELOAI in the schema.
        /// </summary>
        [Column(Storage = "_TENTHELOAI", DbType = "VARCHAR(30) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENTHELOAI
        {
            get
            {
                return this._TENTHELOAI;
            }
            set
            {
                if (this._TENTHELOAI != value)
                {
                    this._TENTHELOAI = value;
                }
            }
        }
    }

    /// <summary>
    /// VIEW
    /// </summary>
    [Table(Name = @"quanlythuvien.pmct")]
    public partial class PMCT
    {
        #pragma warning disable 0649

        private string _MAPHIEUMUON;

        private string _MASACH;

        private string _MANV;

        private string _MADG;

        private System.Nullable<System.DateTime> _NGAYMUON;

        private System.Nullable<System.DateTime> _NGAYDUKIENTRA;

        private System.Nullable<float> _PHICOC;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAPHIEUMUONChanging(string value);
        partial void OnMAPHIEUMUONChanged();
        partial void OnMASACHChanging(string value);
        partial void OnMASACHChanged();
        partial void OnMANVChanging(string value);
        partial void OnMANVChanged();
        partial void OnMADGChanging(string value);
        partial void OnMADGChanged();
        partial void OnNGAYMUONChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYMUONChanged();
        partial void OnNGAYDUKIENTRAChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYDUKIENTRAChanged();
        partial void OnPHICOCChanging(System.Nullable<float> value);
        partial void OnPHICOCChanged();
        #endregion

        public PMCT()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAPHIEUMUON in the schema.
        /// </summary>
        [Column(Storage = "_MAPHIEUMUON", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MAPHIEUMUON
        {
            get
            {
                return this._MAPHIEUMUON;
            }
            set
            {
                if (this._MAPHIEUMUON != value)
                {
                    this._MAPHIEUMUON = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MASACH in the schema.
        /// </summary>
        [Column(Storage = "_MASACH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MASACH
        {
            get
            {
                return this._MASACH;
            }
            set
            {
                if (this._MASACH != value)
                {
                    this._MASACH = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANV in the schema.
        /// </summary>
        [Column(Storage = "_MANV", CanBeNull = false, DbType = "CHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANV
        {
            get
            {
                return this._MANV;
            }
            set
            {
                if (this._MANV != value)
                {
                    this._MANV = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADG in the schema.
        /// </summary>
        [Column(Storage = "_MADG", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MADG
        {
            get
            {
                return this._MADG;
            }
            set
            {
                if (this._MADG != value)
                {
                    this._MADG = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYMUON in the schema.
        /// </summary>
        [Column(Storage = "_NGAYMUON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYMUON
        {
            get
            {
                return this._NGAYMUON;
            }
            set
            {
                if (this._NGAYMUON != value)
                {
                    this._NGAYMUON = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYDUKIENTRA in the schema.
        /// </summary>
        [Column(Storage = "_NGAYDUKIENTRA", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYDUKIENTRA
        {
            get
            {
                return this._NGAYDUKIENTRA;
            }
            set
            {
                if (this._NGAYDUKIENTRA != value)
                {
                    this._NGAYDUKIENTRA = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PHICOC in the schema.
        /// </summary>
        [Column(Storage = "_PHICOC", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> PHICOC
        {
            get
            {
                return this._PHICOC;
            }
            set
            {
                if (this._PHICOC != value)
                {
                    this._PHICOC = value;
                }
            }
        }
    }

    /// <summary>
    /// VIEW
    /// </summary>
    [Table(Name = @"quanlythuvien.viewphat")]
    public partial class VIEWPHAT
    {
        #pragma warning disable 0649

        private string _MAPHAT;

        private string _MADG;

        private System.Nullable<float> _TIENPHAT;

        private string _TENDIEUKHOAN;

        private string _GHICHU;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAPHATChanging(string value);
        partial void OnMAPHATChanged();
        partial void OnMADGChanging(string value);
        partial void OnMADGChanged();
        partial void OnTIENPHATChanging(System.Nullable<float> value);
        partial void OnTIENPHATChanged();
        partial void OnTENDIEUKHOANChanging(string value);
        partial void OnTENDIEUKHOANChanged();
        partial void OnGHICHUChanging(string value);
        partial void OnGHICHUChanged();
        #endregion

        public VIEWPHAT()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAPHAT in the schema.
        /// </summary>
        [Column(Storage = "_MAPHAT", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MAPHAT
        {
            get
            {
                return this._MAPHAT;
            }
            set
            {
                if (this._MAPHAT != value)
                {
                    this._MAPHAT = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADG in the schema.
        /// </summary>
        [Column(Storage = "_MADG", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MADG
        {
            get
            {
                return this._MADG;
            }
            set
            {
                if (this._MADG != value)
                {
                    this._MADG = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIENPHAT in the schema.
        /// </summary>
        [Column(Storage = "_TIENPHAT", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> TIENPHAT
        {
            get
            {
                return this._TIENPHAT;
            }
            set
            {
                if (this._TIENPHAT != value)
                {
                    this._TIENPHAT = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENDIEUKHOAN in the schema.
        /// </summary>
        [Column(Storage = "_TENDIEUKHOAN", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENDIEUKHOAN
        {
            get
            {
                return this._TENDIEUKHOAN;
            }
            set
            {
                if (this._TENDIEUKHOAN != value)
                {
                    this._TENDIEUKHOAN = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GHICHU in the schema.
        /// </summary>
        [Column(Storage = "_GHICHU", DbType = "VARCHAR(500) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GHICHU
        {
            get
            {
                return this._GHICHU;
            }
            set
            {
                if (this._GHICHU != value)
                {
                    this._GHICHU = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for linQ_View.NHANVIEN in the schema.
    /// </summary>
    [Table(Name = @"quanlythuvien.nhanvien")]
    public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _MANV;

        private string _TENNV;

        private string _MACHUCVU;

        private string _TAIKHOAN;

        private System.Nullable<System.DateTime> _NGAYSINH;

        private string _SOCMND;

        private string _DIACHITHUONGTRU;

        private string _SODT;

        private string _EMAIL;
        #pragma warning restore 0649

        private EntitySet<DONDATHANG> _DONDATHANGs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMANVChanging(string value);
        partial void OnMANVChanged();
        partial void OnTENNVChanging(string value);
        partial void OnTENNVChanged();
        partial void OnMACHUCVUChanging(string value);
        partial void OnMACHUCVUChanged();
        partial void OnTAIKHOANChanging(string value);
        partial void OnTAIKHOANChanged();
        partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYSINHChanged();
        partial void OnSOCMNDChanging(string value);
        partial void OnSOCMNDChanged();
        partial void OnDIACHITHUONGTRUChanging(string value);
        partial void OnDIACHITHUONGTRUChanged();
        partial void OnSODTChanging(string value);
        partial void OnSODTChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        #endregion

        public NHANVIEN()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MANV in the schema.
        /// </summary>
        [Column(Storage = "_MANV", CanBeNull = false, DbType = "CHAR(50) NOT NULL", IsPrimaryKey = true)]
        public string MANV
        {
            get
            {
                return this._MANV;
            }
            set
            {
                if (this._MANV != value)
                {
                    this.OnMANVChanging(value);
                    this.SendPropertyChanging();
                    this._MANV = value;
                    this.SendPropertyChanged("MANV");
                    this.OnMANVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNV in the schema.
        /// </summary>
        [Column(Storage = "_TENNV", DbType = "VARCHAR(150) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNV
        {
            get
            {
                return this._TENNV;
            }
            set
            {
                if (this._TENNV != value)
                {
                    this.OnTENNVChanging(value);
                    this.SendPropertyChanging();
                    this._TENNV = value;
                    this.SendPropertyChanged("TENNV");
                    this.OnTENNVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MACHUCVU in the schema.
        /// </summary>
        [Column(Storage = "_MACHUCVU", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MACHUCVU
        {
            get
            {
                return this._MACHUCVU;
            }
            set
            {
                if (this._MACHUCVU != value)
                {
                    this.OnMACHUCVUChanging(value);
                    this.SendPropertyChanging();
                    this._MACHUCVU = value;
                    this.SendPropertyChanged("MACHUCVU");
                    this.OnMACHUCVUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TAIKHOAN in the schema.
        /// </summary>
        [Column(Storage = "_TAIKHOAN", DbType = "VARCHAR(30) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TAIKHOAN
        {
            get
            {
                return this._TAIKHOAN;
            }
            set
            {
                if (this._TAIKHOAN != value)
                {
                    this.OnTAIKHOANChanging(value);
                    this.SendPropertyChanging();
                    this._TAIKHOAN = value;
                    this.SendPropertyChanged("TAIKHOAN");
                    this.OnTAIKHOANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYSINH in the schema.
        /// </summary>
        [Column(Storage = "_NGAYSINH", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYSINH
        {
            get
            {
                return this._NGAYSINH;
            }
            set
            {
                if (this._NGAYSINH != value)
                {
                    this.OnNGAYSINHChanging(value);
                    this.SendPropertyChanging();
                    this._NGAYSINH = value;
                    this.SendPropertyChanged("NGAYSINH");
                    this.OnNGAYSINHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOCMND in the schema.
        /// </summary>
        [Column(Storage = "_SOCMND", DbType = "VARCHAR(10) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SOCMND
        {
            get
            {
                return this._SOCMND;
            }
            set
            {
                if (this._SOCMND != value)
                {
                    this.OnSOCMNDChanging(value);
                    this.SendPropertyChanging();
                    this._SOCMND = value;
                    this.SendPropertyChanged("SOCMND");
                    this.OnSOCMNDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIACHITHUONGTRU in the schema.
        /// </summary>
        [Column(Storage = "_DIACHITHUONGTRU", DbType = "VARCHAR(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIACHITHUONGTRU
        {
            get
            {
                return this._DIACHITHUONGTRU;
            }
            set
            {
                if (this._DIACHITHUONGTRU != value)
                {
                    this.OnDIACHITHUONGTRUChanging(value);
                    this.SendPropertyChanging();
                    this._DIACHITHUONGTRU = value;
                    this.SendPropertyChanged("DIACHITHUONGTRU");
                    this.OnDIACHITHUONGTRUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SODT in the schema.
        /// </summary>
        [Column(Storage = "_SODT", DbType = "VARCHAR(10) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SODT
        {
            get
            {
                return this._SODT;
            }
            set
            {
                if (this._SODT != value)
                {
                    this.OnSODTChanging(value);
                    this.SendPropertyChanging();
                    this._SODT = value;
                    this.SendPropertyChanged("SODT");
                    this.OnSODTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR(150) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MANV", OtherKey="MANV", DeleteRule="RESTRICT")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHANVIEN = this;
        }
    
        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHANVIEN = null;
        }
    }

    /// <summary>
    /// There are no comments for linQ_View.SACH in the schema.
    /// </summary>
    [Table(Name = @"quanlythuvien.sach")]
    public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _MASACH;

        private string _MATHELOAI;

        private string _MATACGIA;

        private string _MANXB;

        private string _MAVT;

        private string _TENSACH;

        private System.Nullable<int> _NAMXB;

        private string _HINHANHSACH;

        private string _MOTA;

        private string _KHOA;

        private System.Nullable<System.DateTime> _THANGNHAP;

        private System.Nullable<float> _GIA;

        private System.Nullable<int> _SOLUONG;
        #pragma warning restore 0649

        private EntitySet<CHITIETDONDATHANG> _CHITIETDONDATHANGs;

        private EntityRef<NHAXB> _NHAXB;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASACHChanging(string value);
        partial void OnMASACHChanged();
        partial void OnMATHELOAIChanging(string value);
        partial void OnMATHELOAIChanged();
        partial void OnMATACGIAChanging(string value);
        partial void OnMATACGIAChanged();
        partial void OnMANXBChanging(string value);
        partial void OnMANXBChanged();
        partial void OnMAVTChanging(string value);
        partial void OnMAVTChanged();
        partial void OnTENSACHChanging(string value);
        partial void OnTENSACHChanged();
        partial void OnNAMXBChanging(System.Nullable<int> value);
        partial void OnNAMXBChanged();
        partial void OnHINHANHSACHChanging(string value);
        partial void OnHINHANHSACHChanged();
        partial void OnMOTAChanging(string value);
        partial void OnMOTAChanged();
        partial void OnKHOAChanging(string value);
        partial void OnKHOAChanged();
        partial void OnTHANGNHAPChanging(System.Nullable<System.DateTime> value);
        partial void OnTHANGNHAPChanged();
        partial void OnGIAChanging(System.Nullable<float> value);
        partial void OnGIAChanged();
        partial void OnSOLUONGChanging(System.Nullable<int> value);
        partial void OnSOLUONGChanged();
        #endregion

        public SACH()
        {
            this._CHITIETDONDATHANGs = new EntitySet<CHITIETDONDATHANG>(new Action<CHITIETDONDATHANG>(this.attach_CHITIETDONDATHANGs), new Action<CHITIETDONDATHANG>(this.detach_CHITIETDONDATHANGs));
            this._NHAXB  = default(EntityRef<NHAXB>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASACH in the schema.
        /// </summary>
        [Column(Storage = "_MASACH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", IsPrimaryKey = true)]
        public string MASACH
        {
            get
            {
                return this._MASACH;
            }
            set
            {
                if (this._MASACH != value)
                {
                    this.OnMASACHChanging(value);
                    this.SendPropertyChanging();
                    this._MASACH = value;
                    this.SendPropertyChanged("MASACH");
                    this.OnMASACHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATHELOAI in the schema.
        /// </summary>
        [Column(Storage = "_MATHELOAI", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATHELOAI
        {
            get
            {
                return this._MATHELOAI;
            }
            set
            {
                if (this._MATHELOAI != value)
                {
                    this.OnMATHELOAIChanging(value);
                    this.SendPropertyChanging();
                    this._MATHELOAI = value;
                    this.SendPropertyChanged("MATHELOAI");
                    this.OnMATHELOAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATACGIA in the schema.
        /// </summary>
        [Column(Storage = "_MATACGIA", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATACGIA
        {
            get
            {
                return this._MATACGIA;
            }
            set
            {
                if (this._MATACGIA != value)
                {
                    this.OnMATACGIAChanging(value);
                    this.SendPropertyChanging();
                    this._MATACGIA = value;
                    this.SendPropertyChanged("MATACGIA");
                    this.OnMATACGIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANXB in the schema.
        /// </summary>
        [Column(Storage = "_MANXB", CanBeNull = false, DbType = "CHAR(5) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANXB
        {
            get
            {
                return this._MANXB;
            }
            set
            {
                if (this._MANXB != value)
                {
                    if (this._NHAXB.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMANXBChanging(value);
                    this.SendPropertyChanging();
                    this._MANXB = value;
                    this.SendPropertyChanged("MANXB");
                    this.OnMANXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MAVT in the schema.
        /// </summary>
        [Column(Storage = "_MAVT", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MAVT
        {
            get
            {
                return this._MAVT;
            }
            set
            {
                if (this._MAVT != value)
                {
                    this.OnMAVTChanging(value);
                    this.SendPropertyChanging();
                    this._MAVT = value;
                    this.SendPropertyChanged("MAVT");
                    this.OnMAVTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSACH in the schema.
        /// </summary>
        [Column(Storage = "_TENSACH", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSACH
        {
            get
            {
                return this._TENSACH;
            }
            set
            {
                if (this._TENSACH != value)
                {
                    this.OnTENSACHChanging(value);
                    this.SendPropertyChanging();
                    this._TENSACH = value;
                    this.SendPropertyChanged("TENSACH");
                    this.OnTENSACHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAMXB in the schema.
        /// </summary>
        [Column(Storage = "_NAMXB", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NAMXB
        {
            get
            {
                return this._NAMXB;
            }
            set
            {
                if (this._NAMXB != value)
                {
                    this.OnNAMXBChanging(value);
                    this.SendPropertyChanging();
                    this._NAMXB = value;
                    this.SendPropertyChanged("NAMXB");
                    this.OnNAMXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HINHANHSACH in the schema.
        /// </summary>
        [Column(Storage = "_HINHANHSACH", DbType = "VARCHAR(500) NULL", UpdateCheck = UpdateCheck.Never)]
        public string HINHANHSACH
        {
            get
            {
                return this._HINHANHSACH;
            }
            set
            {
                if (this._HINHANHSACH != value)
                {
                    this.OnHINHANHSACHChanging(value);
                    this.SendPropertyChanging();
                    this._HINHANHSACH = value;
                    this.SendPropertyChanged("HINHANHSACH");
                    this.OnHINHANHSACHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTA in the schema.
        /// </summary>
        [Column(Storage = "_MOTA", DbType = "VARCHAR(1500) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTA
        {
            get
            {
                return this._MOTA;
            }
            set
            {
                if (this._MOTA != value)
                {
                    this.OnMOTAChanging(value);
                    this.SendPropertyChanging();
                    this._MOTA = value;
                    this.SendPropertyChanged("MOTA");
                    this.OnMOTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for KHOA in the schema.
        /// </summary>
        [Column(Storage = "_KHOA", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string KHOA
        {
            get
            {
                return this._KHOA;
            }
            set
            {
                if (this._KHOA != value)
                {
                    this.OnKHOAChanging(value);
                    this.SendPropertyChanging();
                    this._KHOA = value;
                    this.SendPropertyChanged("KHOA");
                    this.OnKHOAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for THANGNHAP in the schema.
        /// </summary>
        [Column(Storage = "_THANGNHAP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> THANGNHAP
        {
            get
            {
                return this._THANGNHAP;
            }
            set
            {
                if (this._THANGNHAP != value)
                {
                    this.OnTHANGNHAPChanging(value);
                    this.SendPropertyChanging();
                    this._THANGNHAP = value;
                    this.SendPropertyChanged("THANGNHAP");
                    this.OnTHANGNHAPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIA in the schema.
        /// </summary>
        [Column(Storage = "_GIA", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> GIA
        {
            get
            {
                return this._GIA;
            }
            set
            {
                if (this._GIA != value)
                {
                    this.OnGIAChanging(value);
                    this.SendPropertyChanging();
                    this._GIA = value;
                    this.SendPropertyChanged("GIA");
                    this.OnGIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOLUONG in the schema.
        /// </summary>
        [Column(Storage = "_SOLUONG", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SOLUONG
        {
            get
            {
                return this._SOLUONG;
            }
            set
            {
                if (this._SOLUONG != value)
                {
                    this.OnSOLUONGChanging(value);
                    this.SendPropertyChanging();
                    this._SOLUONG = value;
                    this.SendPropertyChanged("SOLUONG");
                    this.OnSOLUONGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHITIETDONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SACH_CHITIETDONDATHANG", Storage="_CHITIETDONDATHANGs", ThisKey="MASACH", OtherKey="MASACH", DeleteRule="RESTRICT")]
        public EntitySet<CHITIETDONDATHANG> CHITIETDONDATHANGs
        {
            get
            {
                return this._CHITIETDONDATHANGs;
            }
            set
            {
                this._CHITIETDONDATHANGs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for NHAXB in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHAXB_SACH", Storage="_NHAXB", ThisKey="MANXB", OtherKey="MANXB", IsForeignKey=true)]
        public NHAXB NHAXB
        {
            get
            {
                return this._NHAXB.Entity;
            }
            set
            {
                NHAXB previousValue = this._NHAXB.Entity;
                if ((previousValue != value) || (this._NHAXB.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._NHAXB.Entity = null;
                        previousValue.SACHES.Remove(this);
                    }
                    this._NHAXB.Entity = value;
                    if (value != null)
                    {
                        this._MANXB = value.MANXB;
                        value.SACHES.Add(this);
                    }
                    else
                    {
                        this._MANXB = default(string);
                    }
                    this.SendPropertyChanged("NHAXB");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_CHITIETDONDATHANGs(CHITIETDONDATHANG entity)
        {
            this.SendPropertyChanging("CHITIETDONDATHANGs");
            entity.SACH = this;
        }
    
        private void detach_CHITIETDONDATHANGs(CHITIETDONDATHANG entity)
        {
            this.SendPropertyChanging("CHITIETDONDATHANGs");
            entity.SACH = null;
        }
    }

    /// <summary>
    /// There are no comments for linQ_View.NHAXB in the schema.
    /// </summary>
    [Table(Name = @"quanlythuvien.nhaxb")]
    public partial class NHAXB : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _MANXB;

        private string _TENNXB;

        private string _DCNXB;

        private string _DTNXB;
        #pragma warning restore 0649

        private EntitySet<DONDATHANG> _DONDATHANGs;

        private EntitySet<SACH> _SACHES;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMANXBChanging(string value);
        partial void OnMANXBChanged();
        partial void OnTENNXBChanging(string value);
        partial void OnTENNXBChanged();
        partial void OnDCNXBChanging(string value);
        partial void OnDCNXBChanged();
        partial void OnDTNXBChanging(string value);
        partial void OnDTNXBChanged();
        #endregion

        public NHAXB()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            this._SACHES = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHES), new Action<SACH>(this.detach_SACHES));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MANXB in the schema.
        /// </summary>
        [Column(Storage = "_MANXB", CanBeNull = false, DbType = "CHAR(5) NOT NULL", IsPrimaryKey = true)]
        public string MANXB
        {
            get
            {
                return this._MANXB;
            }
            set
            {
                if (this._MANXB != value)
                {
                    this.OnMANXBChanging(value);
                    this.SendPropertyChanging();
                    this._MANXB = value;
                    this.SendPropertyChanged("MANXB");
                    this.OnMANXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNXB in the schema.
        /// </summary>
        [Column(Storage = "_TENNXB", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNXB
        {
            get
            {
                return this._TENNXB;
            }
            set
            {
                if (this._TENNXB != value)
                {
                    this.OnTENNXBChanging(value);
                    this.SendPropertyChanging();
                    this._TENNXB = value;
                    this.SendPropertyChanged("TENNXB");
                    this.OnTENNXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DCNXB in the schema.
        /// </summary>
        [Column(Name = @"DC_NXB", Storage = "_DCNXB", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DCNXB
        {
            get
            {
                return this._DCNXB;
            }
            set
            {
                if (this._DCNXB != value)
                {
                    this.OnDCNXBChanging(value);
                    this.SendPropertyChanging();
                    this._DCNXB = value;
                    this.SendPropertyChanged("DCNXB");
                    this.OnDCNXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DTNXB in the schema.
        /// </summary>
        [Column(Name = @"DT_NXB", Storage = "_DTNXB", DbType = "VARCHAR(10) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DTNXB
        {
            get
            {
                return this._DTNXB;
            }
            set
            {
                if (this._DTNXB != value)
                {
                    this.OnDTNXBChanging(value);
                    this.SendPropertyChanging();
                    this._DTNXB = value;
                    this.SendPropertyChanged("DTNXB");
                    this.OnDTNXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHAXB_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MANXB", OtherKey="MANXB", DeleteRule="RESTRICT")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SACHES in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHAXB_SACH", Storage="_SACHES", ThisKey="MANXB", OtherKey="MANXB", DeleteRule="RESTRICT")]
        public EntitySet<SACH> SACHES
        {
            get
            {
                return this._SACHES;
            }
            set
            {
                this._SACHES.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHAXB = this;
        }
    
        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHAXB = null;
        }

        private void attach_SACHES(SACH entity)
        {
            this.SendPropertyChanging("SACHES");
            entity.NHAXB = this;
        }
    
        private void detach_SACHES(SACH entity)
        {
            this.SendPropertyChanging("SACHES");
            entity.NHAXB = null;
        }
    }

    /// <summary>
    /// There are no comments for linQ_View.DONDATHANG in the schema.
    /// </summary>
    [Table(Name = @"quanlythuvien.dondathang")]
    public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _MADDH;

        private string _MANV;

        private string _MANXB;

        private System.Nullable<System.DateTime> _NGAYNHAP;
        #pragma warning restore 0649

        private EntitySet<CHITIETDONDATHANG> _CHITIETDONDATHANGs;

        private EntityRef<NHANVIEN> _NHANVIEN;

        private EntityRef<NHAXB> _NHAXB;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMADDHChanging(string value);
        partial void OnMADDHChanged();
        partial void OnMANVChanging(string value);
        partial void OnMANVChanged();
        partial void OnMANXBChanging(string value);
        partial void OnMANXBChanged();
        partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYNHAPChanged();
        #endregion

        public DONDATHANG()
        {
            this._CHITIETDONDATHANGs = new EntitySet<CHITIETDONDATHANG>(new Action<CHITIETDONDATHANG>(this.attach_CHITIETDONDATHANGs), new Action<CHITIETDONDATHANG>(this.detach_CHITIETDONDATHANGs));
            this._NHANVIEN  = default(EntityRef<NHANVIEN>);
            this._NHAXB  = default(EntityRef<NHAXB>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MADDH in the schema.
        /// </summary>
        [Column(Storage = "_MADDH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", IsPrimaryKey = true)]
        public string MADDH
        {
            get
            {
                return this._MADDH;
            }
            set
            {
                if (this._MADDH != value)
                {
                    this.OnMADDHChanging(value);
                    this.SendPropertyChanging();
                    this._MADDH = value;
                    this.SendPropertyChanged("MADDH");
                    this.OnMADDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANV in the schema.
        /// </summary>
        [Column(Storage = "_MANV", DbType = "CHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANV
        {
            get
            {
                return this._MANV;
            }
            set
            {
                if (this._MANV != value)
                {
                    if (this._NHANVIEN.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMANVChanging(value);
                    this.SendPropertyChanging();
                    this._MANV = value;
                    this.SendPropertyChanged("MANV");
                    this.OnMANVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANXB in the schema.
        /// </summary>
        [Column(Storage = "_MANXB", DbType = "CHAR(5) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MANXB
        {
            get
            {
                return this._MANXB;
            }
            set
            {
                if (this._MANXB != value)
                {
                    if (this._NHAXB.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMANXBChanging(value);
                    this.SendPropertyChanging();
                    this._MANXB = value;
                    this.SendPropertyChanged("MANXB");
                    this.OnMANXBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYNHAP in the schema.
        /// </summary>
        [Column(Storage = "_NGAYNHAP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYNHAP
        {
            get
            {
                return this._NGAYNHAP;
            }
            set
            {
                if (this._NGAYNHAP != value)
                {
                    this.OnNGAYNHAPChanging(value);
                    this.SendPropertyChanging();
                    this._NGAYNHAP = value;
                    this.SendPropertyChanged("NGAYNHAP");
                    this.OnNGAYNHAPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHITIETDONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_CHITIETDONDATHANG", Storage="_CHITIETDONDATHANGs", ThisKey="MADDH", OtherKey="MADDH", DeleteRule="RESTRICT")]
        public EntitySet<CHITIETDONDATHANG> CHITIETDONDATHANGs
        {
            get
            {
                return this._CHITIETDONDATHANGs;
            }
            set
            {
                this._CHITIETDONDATHANGs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for NHANVIEN in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_DONDATHANG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
        public NHANVIEN NHANVIEN
        {
            get
            {
                return this._NHANVIEN.Entity;
            }
            set
            {
                NHANVIEN previousValue = this._NHANVIEN.Entity;
                if ((previousValue != value) || (this._NHANVIEN.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._NHANVIEN.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._NHANVIEN.Entity = value;
                    if (value != null)
                    {
                        this._MANV = value.MANV;
                        value.DONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MANV = default(string);
                    }
                    this.SendPropertyChanged("NHANVIEN");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NHAXB in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHAXB_DONDATHANG", Storage="_NHAXB", ThisKey="MANXB", OtherKey="MANXB", IsForeignKey=true)]
        public NHAXB NHAXB
        {
            get
            {
                return this._NHAXB.Entity;
            }
            set
            {
                NHAXB previousValue = this._NHAXB.Entity;
                if ((previousValue != value) || (this._NHAXB.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._NHAXB.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._NHAXB.Entity = value;
                    if (value != null)
                    {
                        this._MANXB = value.MANXB;
                        value.DONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MANXB = default(string);
                    }
                    this.SendPropertyChanged("NHAXB");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_CHITIETDONDATHANGs(CHITIETDONDATHANG entity)
        {
            this.SendPropertyChanging("CHITIETDONDATHANGs");
            entity.DONDATHANG = this;
        }
    
        private void detach_CHITIETDONDATHANGs(CHITIETDONDATHANG entity)
        {
            this.SendPropertyChanging("CHITIETDONDATHANGs");
            entity.DONDATHANG = null;
        }
    }

    /// <summary>
    /// There are no comments for linQ_View.CHITIETDONDATHANG in the schema.
    /// </summary>
    [Table(Name = @"quanlythuvien.chitietdondathang")]
    public partial class CHITIETDONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _MASACH;

        private string _MADDH;

        private System.Nullable<int> _SOLUONGNHAP;

        private System.Nullable<float> _DONGIANHAP;

        private string _GHICHU;
        #pragma warning restore 0649

        private EntityRef<DONDATHANG> _DONDATHANG;

        private EntityRef<SACH> _SACH;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASACHChanging(string value);
        partial void OnMASACHChanged();
        partial void OnMADDHChanging(string value);
        partial void OnMADDHChanged();
        partial void OnSOLUONGNHAPChanging(System.Nullable<int> value);
        partial void OnSOLUONGNHAPChanged();
        partial void OnDONGIANHAPChanging(System.Nullable<float> value);
        partial void OnDONGIANHAPChanged();
        partial void OnGHICHUChanging(string value);
        partial void OnGHICHUChanged();
        #endregion

        public CHITIETDONDATHANG()
        {
            this._DONDATHANG  = default(EntityRef<DONDATHANG>);
            this._SACH  = default(EntityRef<SACH>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASACH in the schema.
        /// </summary>
        [Column(Storage = "_MASACH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", IsPrimaryKey = true)]
        public string MASACH
        {
            get
            {
                return this._MASACH;
            }
            set
            {
                if (this._MASACH != value)
                {
                    if (this._SACH.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMASACHChanging(value);
                    this.SendPropertyChanging();
                    this._MASACH = value;
                    this.SendPropertyChanged("MASACH");
                    this.OnMASACHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADDH in the schema.
        /// </summary>
        [Column(Storage = "_MADDH", CanBeNull = false, DbType = "CHAR(5) NOT NULL", IsPrimaryKey = true)]
        public string MADDH
        {
            get
            {
                return this._MADDH;
            }
            set
            {
                if (this._MADDH != value)
                {
                    if (this._DONDATHANG.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMADDHChanging(value);
                    this.SendPropertyChanging();
                    this._MADDH = value;
                    this.SendPropertyChanged("MADDH");
                    this.OnMADDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOLUONGNHAP in the schema.
        /// </summary>
        [Column(Storage = "_SOLUONGNHAP", DbType = "INT(11) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SOLUONGNHAP
        {
            get
            {
                return this._SOLUONGNHAP;
            }
            set
            {
                if (this._SOLUONGNHAP != value)
                {
                    this.OnSOLUONGNHAPChanging(value);
                    this.SendPropertyChanging();
                    this._SOLUONGNHAP = value;
                    this.SendPropertyChanged("SOLUONGNHAP");
                    this.OnSOLUONGNHAPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONGIANHAP in the schema.
        /// </summary>
        [Column(Storage = "_DONGIANHAP", DbType = "FLOAT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<float> DONGIANHAP
        {
            get
            {
                return this._DONGIANHAP;
            }
            set
            {
                if (this._DONGIANHAP != value)
                {
                    this.OnDONGIANHAPChanging(value);
                    this.SendPropertyChanging();
                    this._DONGIANHAP = value;
                    this.SendPropertyChanged("DONGIANHAP");
                    this.OnDONGIANHAPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GHICHU in the schema.
        /// </summary>
        [Column(Storage = "_GHICHU", DbType = "VARCHAR(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GHICHU
        {
            get
            {
                return this._GHICHU;
            }
            set
            {
                if (this._GHICHU != value)
                {
                    this.OnGHICHUChanging(value);
                    this.SendPropertyChanging();
                    this._GHICHU = value;
                    this.SendPropertyChanged("GHICHU");
                    this.OnGHICHUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANG in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_CHITIETDONDATHANG", Storage="_DONDATHANG", ThisKey="MADDH", OtherKey="MADDH", IsForeignKey=true)]
        public DONDATHANG DONDATHANG
        {
            get
            {
                return this._DONDATHANG.Entity;
            }
            set
            {
                DONDATHANG previousValue = this._DONDATHANG.Entity;
                if ((previousValue != value) || (this._DONDATHANG.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DONDATHANG.Entity = null;
                        previousValue.CHITIETDONDATHANGs.Remove(this);
                    }
                    this._DONDATHANG.Entity = value;
                    if (value != null)
                    {
                        this._MADDH = value.MADDH;
                        value.CHITIETDONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MADDH = default(string);
                    }
                    this.SendPropertyChanged("DONDATHANG");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SACH in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SACH_CHITIETDONDATHANG", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
        public SACH SACH
        {
            get
            {
                return this._SACH.Entity;
            }
            set
            {
                SACH previousValue = this._SACH.Entity;
                if ((previousValue != value) || (this._SACH.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._SACH.Entity = null;
                        previousValue.CHITIETDONDATHANGs.Remove(this);
                    }
                    this._SACH.Entity = value;
                    if (value != null)
                    {
                        this._MASACH = value.MASACH;
                        value.CHITIETDONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MASACH = default(string);
                    }
                    this.SendPropertyChanged("SACH");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
